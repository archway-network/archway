# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Build and Publish Docker image

on:
  push:
    branches: [main]
    tags: ["v*"]

  pull_request:
    branches: [main]

jobs:
  build-docker-image:
    runs-on: ubuntu-latest

    outputs:
      image-version: ${{ steps.meta.outputs.version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # This action will avoid that the image is rebuilt unnecessarily in pull-requests
      - name: Checks if Dockerfile was updated
        id: changed-dockerfile
        uses: tj-actions/changed-files@v1.0.0
        with:
          files: Dockerfile

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        if: ${{ steps.changed-dockerfile.outputs.any_changed == 'true' || github.event_name != 'pull_request' }}

      - name: Login to DockerHub
        if: ${{ steps.changed-dockerfile.outputs.any_changed == 'true' || github.event_name != 'pull_request' }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER_NAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        if: ${{ steps.changed-dockerfile.outputs.any_changed == 'true' || github.event_name != 'pull_request' }}
        with:
          images: archwaynetwork/archwayd
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}},enable=${{ !startsWith(github.ref, 'refs/tags/v0.') }}
            type=sha,priority=700
            type=raw,value=titus,enable=${{ endsWith(github.ref, github.event.repository.default_branch) }}
            type=raw,value=constantine,enable=${{ startsWith(github.ref, 'refs/tags/v') }}
            type=raw,value=augusta,enable=${{ startsWith(github.ref, 'refs/tags/v') }}
            type=edge,priority=100
          labels: |
            org.opencontainers.image.vendor=Archway Network
            org.opencontainers.image.url=https://archway.io

      - name: Build and push production image
        uses: docker/build-push-action@v2
        if: ${{ steps.changed-dockerfile.outputs.any_changed == 'true' || github.event_name != 'pull_request' }}
        with:
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-titus:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && endsWith(github.ref, github.event.repository.default_branch) }}

    needs:
      - build-docker-image

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Update NODE_VERSION
        run: |
          sed -i -e "s|NODE_VERSION|${{ needs.build-docker-image.outputs.image-version }}|g" ci/titus-1.yaml

      - name: Deploy Chain
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.GKE_TENDERMINT_DEV_US_EAST1_STARPORT_CLOUD_DEV_KUBECONFIG_B64 }}
          command: apply -n archway -f ci/titus-1.yaml

  deploy-constantine:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') }}

    needs:
      - build-docker-image

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Update NODE_VERSION
        run: |
          sed -i -e "s|NODE_VERSION|${{ needs.build-docker-image.outputs.image-version }}|g" ci/constantine-1.yaml

      - name: Deploy Chain
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.GKE_TENDERMINT_DEV_US_EAST1_STARPORT_CLOUD_DEV_KUBECONFIG_B64 }}
          command: apply -n archway -f ci/constantine-1.yaml
